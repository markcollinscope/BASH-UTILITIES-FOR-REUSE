
isBool() # <alleged-bool-value>
{
    local VAL=$1;
    test "$VAL" = true || test "$VAL" = false;
}

isVal() # <value-or-nothing>
{
    echo $1;
    ! null $1;
}

ifValOpt()
{
    eval $(valopt -v VAL "$@")
    if null $VAL; then errecho "no value given (-v) to $(fnname)"; return 1; fi

    ARGS=$(echo "$@" | sed "s/{}/$VAL/g")
    echo $(fnname): $ARGS
    eval $FN $CMD
} 

ifValOpt -v VALUE echo 2 3 {} 4 4

fn()
{
    echo $#
    if ! null $1; then echo NOTNULL; else echo NULL; fi
}

YYY=\\
fn $YYY

XXX=000
ifValOpt -v $XXX echo YES {} NO

ifBoolOpt()
{
    eval $(boolopt -n NOEXIT "$@");

    VAL=$1
    FN=$2
    shift 2;

    ARGS="$@"

    if ! isBool $VAL; then errecho "Non Boolean Bye!" ; exiterr; fi

    if $VAL; then 
        eval $FN $ARGS;
        ECODE=$?

        if ! $NOEXIT; then 
            if test $ECODE; then exitok; else exiterr $ECODE; fi
        fi 

        return $ECODE;
    fi
}

endit() { echo $*; }


B=true
ifBoolOpt $B 'endit  -x 1 2 3' -n
echo Code: $?
echo STILL HERE 
exit

fn() {
    V=
    X=$(optSet $V);
    echo $?
    if $($?); then
        echo YEP $X;
    else
        echo NOPE
    fi 
    #; then echo YES $X; else echo NO $X; fi
}

X=10
echo $?

X=$(echo $X);
echo $?
echo $X


exit
