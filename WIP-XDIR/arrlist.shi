. utils.shi
. sh-unit.shi

arg() # -n: is a valid number (int) - forall numbers passed.
{
    eval $(boolopt -n NUM_OPT "$@")

    if null "$@"; then errecho "$(fnname -l 2): null value fails test in $(fnname)"; exiterr -k; fi

    if $NUM_OPT; then
        for i in "$@"; do
            if ! isNum $i; then errecho "$(fnname -l 2): number fails test in $(fnname) args: <$@>"; exiterr -k; fi
        done
    fi

    echo "$@"
}

list.init()
{
    echo "$@";
}

_init_shtest()
{
	local args='A B C D EFG HIJ'
	local res=$(list.init $args)
	assertSame $args $res
}

runTests

exit;

list.get()
{
    local index=$(arg -n $1); shift;
    echo $(getarg $index "$@");
}

list.set()
{
    local index=$(arg $1);
    local value=$2; 
    shift 2;

    local a=$(list.init "$@")
    local retval=

    retval=$(list.to $((index - 1)) $a);
    retval=$(list.push $value $retval);            # push as append?
    retval=$(list.from $((index + 1)) $a);

    echo $retval;
}

list.to()
{
    local index=$(arg -n $1); shift;

    local retval=
    for i in $(seq 1 $index); do 
        retval=$(concat -s $retval $(getarg $i "$@"));
    done
    echo $retval
}

list.from()
{
    local index=$(arg -n $1); shift;

    local retval=
    for i in $(seq $index $#); do 
        retval=$(concat -s $retval $(getarg $i "$@"));
    done
    echo $retval
}

list.range()
{
    local from=$(arg -n $1); local to=$(arg -n $2); shift 2;
    local num=$((to - from));

    local retval=$(list.from $from);
    retval=$(list.to $to $retval);

    echo $retval
}

list.push()
{
    echo "$@"
}

list.popval()
{
    getarg $# $@
}

list.pop()
{
    list.to $(($# - 1)) "$@"
}

list.add()
{
    echo "$@"
}

list.rem()
{
    list.from 2 "$@";
}


echo "INIT: $X"
X=$(list.init a b c d e f);
echo $X
echo

echo "to 3: $"
echo $(list.to 3 $X);
echo

echo "FROM 4: $X"
echo $(list.from 4 $X);
echo

echo "PUSH g h i: $X"
X=$(list.push $X g h i)
echo $X
echo

echo "popval: $X"
echo "VALUE: $(list.popval $X)"
echo

echo "POP: $X"
X=$(list.pop $X)
echo $X
echo

echo "ADD A: $X"
X=$(list.add A $X) # ins/del
echo $X
echo

echo "REM: $X"
X=$(list.rem $X)
echo $X
echo

echo "INDEX 4 to ZZZ: $X"
X=$(list.set 4 ZZZ $X)
echo $X
echo

echo "GET 5"
echo $X
echo $(list.get 5)
echo
