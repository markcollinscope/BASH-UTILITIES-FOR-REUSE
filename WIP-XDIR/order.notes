> some 'bring fwd' of old stuff .

Use.base => call in here?
uts.privar => private ref.

uts.privar 
uts.eval --	for safe eval later.

uts.null clone: null.

simple.opt - use set? return '$@'
opt.bool -c|--core (simple) =>  opt.bool [no --rem] --default|-d t/f 
<default - f if not set, unchanged if is set.

- first args only.
- allow val?

opt.val

opt.end - mandatory.
use.eval - mandatory?


arg.end
ref.end
 
fn.clone
fn.clone --vb

Simple opt - bool only. single letter.
E.g. call --dep --if 

uts.call - ?  fn dup as call? (clone - ahg). most basic fn - clone...

uts.setup (uts.uts)
uts.meta / doc / ?

uts.fn	- 1.
uts.arg - 1. (simple E and D)
uts.type ?
uts.ref - 1. (or combine with arg)

uts.sys? => docco, meta system.

uts.opt - 1?
uts.bool - if

uts.str	- if (split str-e str-d or str.advanced?)
uts.list
uts.set
uts.opt	- 2?
uts.map

1a. get working with non e? 
1b. get working with e iteratively?

2. list.
3. set.
4. ref.

Then: 
- review and plan next sections?
- do an article along way for median?

