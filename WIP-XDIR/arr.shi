. utils.shi

arg() # -n: is a valid number (int) - forall numbers passed.
{
    eval $(boolopt -n NUM_OPT "$@")

    if null "$@"; then errecho "$(fnname -l 2): null value fails test in $(fnname)"; exiterr -k; fi

    if $NUM_OPT; then
        for i in "$@"; do
            if ! isNum $i; then errecho "$(fnname -l 2): number fails test in $(fnname) args: <$@>"; exiterr -k; fi
        done
    fi

    echo "$@"
}

arrlist.init()
{
    echo "$@";
}

arrlist.get()
{
    local index=$(arg -n $1); shift;
    echo $(getarg $index "$@");
}

arrlist.set()
{
    local index=$(arg $1);
    local value=$2; 
    shift 2;

    local a=$(arrlist.init "$@")
    local retval=

    retval=$(arrlist.to $((index - 1)) $a);
    retval=$(arrlist.push $value $retval);            # push as append?
    retval=$(arrlist.from $((index + 1)) $a);

    echo $retval;
}

arrlist.to()
{
    local index=$(arg -n $1); shift;

    local retval=
    for i in $(seq 1 $index); do 
        retval=$(concat -s $retval $(getarg $i "$@"));
    done
    echo $retval
}

arrlist.from()
{
    local index=$(arg -n $1); shift;

    local retval=
    for i in $(seq $index $#); do 
        retval=$(concat -s $retval $(getarg $i "$@"));
    done
    echo $retval
}

arrlist.range()
{
    local from=$(arg -n $1); local to=$(arg -n $2); shift 2;
    local num=$((to - from));

    local retval=$(arrlist.from $from);
    retval=$(arrlist.to $to $retval);

    echo $retval
}

arrlist.push()
{
    echo "$@"
}

arrlist.popval()
{
    getarg $# $@
}

arrlist.pop()
{
    arrlist.to $(($# - 1)) "$@"
}

arrlist.add()
{
    echo "$@"
}

arrlist.rem()
{
    arrlist.from 2 "$@";
}


echo "INIT: $X"
X=$(arrlist.init a b c d e f);
echo $X
echo

echo "to 3: $"
echo $(arrlist.to 3 $X);
echo

echo "FROM 4: $X"
echo $(arrlist.from 4 $X);
echo

echo "PUSH g h i: $X"
X=$(arrlist.push $X g h i)
echo $X
echo

echo "popval: $X"
echo "VALUE: $(arrlist.popval $X)"
echo

echo "POP: $X"
X=$(arrlist.pop $X)
echo $X
echo

echo "ADD A: $X"
X=$(arrlist.add A $X) # ins/del
echo $X
echo

echo "REM: $X"
X=$(arrlist.rem $X)
echo $X
echo

echo "INDEX 4 to ZZZ: $X"
X=$(arrlist.set 4 ZZZ $X)
echo $X
echo

echo "GET 5"
echo $X
echo $(arrlist.get 5)
echo
