FUNCTION & VARIABLE RENAME LIST inc ENV VARS.
<old> [<old...>] -> <new> [<alt-new...>] | dep/del + # notes.
scriptName -> dep
getGlobBackupDir -> utsVar -B -b |--backup-dir  # for all exported UTS_ values.

UTS_BACKUPDIR export?
UTS_BASHINCLUDE - rename - is .shi?
UTS_EXCLUDE - grep.
UTS_FORCE - ok.
UTS_FORCEFLAG - ok.
UTS_HELPFLAG - ok.
UTS_LOGDIR - export?
UTS_NOAUTOARGS - ok.
UTS_NOCOLOR - ok.
UTS_PVARDIR export.
UTS_SCRIPTDIR - ??? review.
UTS_SCRIPTTPL - .tpl ?
UTS_SUNIT - .sht?
UTS_VERBOSE - internal only.
UTS_VERBOSEFLAG - ok? or export?

GLOBAL RENAME LIST:
-	utsPrivate =>
-	verbose => utsVerbose() --get --set - 
-	UTS_VERBOSE => private.
-	check other private names.
-	utils_globals => uts_devtools.

PREFIX for Exported Functions.

======================================================
======================================================
Standard Dir Search Path Utils:
0. override path - if given.
1. gitroot;
2. home;
3. local-dir?

StdSearchPath() -d Opt?
- -d used if given
- gitroot, then home, then local?
- grep search to find out how used...

======================================================

ORGANISE THIS FILE => PLAN FOR FIRST OFFICIAL RELEASE
-	must have changes.
-	auto-release process.
-	docco update - minor upgrades to how done.
-	if easy - autoname - autoalias.
-	use alias - for fns. Upgrade ffn, fndef.

INIT IDEAS FOR PLAN (ABOVE):
x.	Use: Reltodo for mandatory check list stuff.
x.	Must: -d|--define ...
x.  Must: works with all not.
x.	Should: autoalias... utsAutoAlias - utsNaming.
x.	Should: use tdd ... autobash ... <move sh-unit to uts>
x.	Could: first ds? using jq? experiment? set: --init|--set --get (default) --list (bash loop format). --pp (pretty print). --vbpp - if verbose.
x.	Could: typedata? dynamic dispatch? 2nd pass!
x.	Wont: opts --strict <enforce naming> ...

-	boolopt, etc, valopt allow --noset? for boolopt -> leave as null value not false?
-	opt NAME => T/F


============================

**** here or scr.
fnAsScript scriptAsFn ?

*****************
uts_env
- evar NAME -d / --default <DEFAULT> / do vb stuff in it.
- --vb - --vbs 

**** ???
valopt -u - is used? valopt --isused xxx_opt


******************
convert uts to use function fn { } style of definition for public functions.
*******************
extend gitrootif function with '--dir' option as alternative to '.' default.
*******************

o _vb ...
vbpusht vbpushf vbpop

********************
default values --hh --ff - what was wrong with -h, -f.

********************
o OPTS:
vb-show-ops ... or print values on verbose flag. verbose is better - I think.
something like:
--hh: default shows all the auto-processed args in UTS. 

*********************
__LIB_XXX__ - std lib var name.
utsPrivate xxx
utsPrivate NAME - get, set based on args. Adds __XXX__ to ensure safety.a
	--get (default).
	--set (optional arg takes value).

*****
getExludes, etc...  utsExcludes (arg sets, no arg gets)... 

utsAutoArgs - autoprocessed values ...
utsAutoArgs --add

********************
Options:
1.	Multiple flags as per => '--xx|-x|--yyyy'
2.	multi-opt => $(multiopt ... --flag VAR "$@");
	- continue processing ongoing cmd line args as '--flag' options until either (a) end of input, or (b) next --flag.
	- limitations - cannot terminate a multi-opt with a normal argument - wouldn't know difference.

********************
o UTILS_GIT?
	- chkGitIsCommitted <error-msg>?

*******************
o Sort out docco -bash script.

*******************
UTS_SCRIPTROOT -- helper functions use. Not good, I think as not really a UTS_ thing...
*******************

NEW-
-	uts_ds (data structures).
-	uts_props (properties, initially files/directories) prop --declare , prop --has prop --val (default t/f - other if arg given).
-	prop --edit.

NEW-
substWithNull $1 $2 - substitutes $1 to null ("") in $2

---
DONE DONE DONE!!!

cdgitroot - change to git root directory if this is a git repo, otherwise stay where you are!
decide if origin/lappie is of any use to anyone! => done as gitrootif function. 
o DEFAULT-VAR stuff.  see default isDefault in _msc.shi

EVAL - add check for --val XXX where XXX is missing (no arg supplied).
