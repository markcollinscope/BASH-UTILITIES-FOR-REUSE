#!/bin/bash

. utils_globals.shi

if ! alreadyIncluded UTILS_PVAR; then
. utils_core.shi
. utils_vb.shi
. utils_msc.shi
. utils_fd.shi

# START CONTENT

__PVARSUFFIX=".pvar"
__PVARDIR=${UTS_PVARDIR:-"/tmp/"}
ensuredirexists $__PVARDIR

_pvarfile()
{
	setvar _PVARF "$1";

	RES=$(concat $__PVARDIR "$_PVARF" "." "$__PVARSUFFIX")
	vbfnecho "PVARFILE: $RES"
	echo $RES
}

_checkpvarisdeclared()
{
	setvar __PVARNAME $1
	local FILE=$(_pvarfile $__PVARNAME);

	if ! test -f $FILE; then
		errecho -s "attempted use of pvar <$__PVARNAME> when not declared";
		exiterr -k;
	fi
}

pvarcontext()
{
	if null "$1"; then errfnecho "no context supplied"; fi
	__PVARSUFFIX=".$1"
}

declarepvar()
{
	chkargcount 2 2 "$@"

	setvar __PVAR_NAME "$1"
	setvar __PVAR_VALUE "$2"

	local FILE=$(_pvarfile $__PVAR_NAME);
	if ! test -f $FILE; then
		echo "$__PVAR_VALUE" > $FILE
	fi
}

setpvar()
{
	setvar __PVAR_NAME "$1"; shift;
	setvar PVAR_VALUE "$@"

	_checkpvarisdeclared $__PVAR_NAME;

	local FILE=$(_pvarfile $__PVAR_NAME);
	echo "$PVAR_VALUE" > $FILE
}

getpvar()
{
	setvar __PVAR_NAME $1;
	_checkpvarisdeclared $__PVAR_NAME;

	local FILE=$(_pvarfile $__PVAR_NAME);

	vbfnecho "PVAR-NAME,FILE: $__PVAR_NAME, $FILE"
	local PVAR_VALUE=$(cat $FILE)
	vbfnecho "PVAR-VALUE: $PVAR_VALUE"
	
	echo $PVAR_VALUE
}

clearpvar()
{
	setvar __PVAR_NAME $1;
	_checkpvarisdeclared $__PVAR_NAME;

	local FILE=$(_pvarfile $__PVAR_NAME);
	if test -f $FILE; then
		rm $FILE;
	fi
}

if test "$1" = "--testpvar"; then
	declarepvar _HELLO	"WORLD"
	setpvar _HELLO "this is a pvar value";
	VAL=$(getpvar _HELLO)
	echo RESULT1: $VAL

	setpvar _HELLO "this is a second value";
	VAL=$(getpvar _HELLO)
	echo RESULT2 $VAL

	declarepvar _GOODBYE
	VAL=$(getpvar _GOODBYE)
	# that's an error.

	clearpvar HELLO
	declarepvar HELLO "THIS IS THIRD VALUE>"
	VAL=$(getpvar _HELLO)
	echo RESULT3: $VAL
fi

# END CONTENT
fi
