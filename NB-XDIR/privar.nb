. utils.shi

section() { if null $_COUNT; then _COUNT=1;fi;  echo; echo "### $1: $_COUNT"; _COUNT=$((_COUNT + 1)); } # todo uts.
errvar() { echovar "$@" 1>&2; } # todo uts.
echovar() { local nm=$1; local -n val=$nm; echo "$nm: $val"; } # todo uts.

section test-errvar-echovar
EVAL=00000011111
echo "EVAL: "
no errvar EVAL
ne echovar EVAL

section "ref vars bash style"
ref.anon()
{
	local nm=$1
	random=$(echo $0 | sed 's?/??g' | sed 's?-??g' | sed 's/.//g' )

	echo $nm$random
}

fn1()
{
	local -n var=$(ref.anon MYVAR);	
	var=20;
}

fn2()
{
	local -n var=$(ref.anon MYVAR);	
	echo $var
}
fn1
fn2


section arg.ref---
arg() { echo $1; }
arg.ref()
{
	echo $1
}

fn3()
{
	local -n var=$(arg.ref $1);
	local val=$(arg $2);

	x=$(arg.ref $1)
	echo "$(fnname): as ref <$1>: <$x>"

	var=$val;

	errvar var
	echo "echo var: $var"
	echo "fn: X: $X"
}

X=99
echovar X

fn3 X 25
echovar X

echo $(fn3 X 99999)
errvar x

section INTERCEPT!

echo XX: $XX
XX() { local val=$XX; XX=1; echo FN: $XX, $val; }
XX=200;
echo XX: $XX
echo
XX=10;
echo XX: $XX

echo FN CALL
XX 20
