dt d1.. d2;
dt -d 2 => 2 days in normal format.
dt -h 3 => 3 hours in normal format.
dt -w 4 => 4 weeks in normal format.

dt: construct a dt (time) diff in secs using:
-w weeks.
-d days.
-h hours.
-m mins,
-s secs + combinations of these.

if $((dt.diff $d1 $d2) > $(dt -h 7 -m 7 -s 33)); then


ideas for 'date' fns.

- standard format - seconds.
- output formats can differ.

local d=$(dt.now)
dt.echo $d -d -w -i -m -h ...

dt.since <date> (now - date)

local d2=$(dt -d <val> -m -y -h -m -s) all giving values.

dt.echo()
-d -h -m -s --yyyy.mm.dd --yy.mm.dd --yyyy.mm.dd.hh.mm.ss

dt.baseformat() => seconds.
dt.now() 

options are seconds, mins, hours, days, weeks (?), 

dt.print()
--in seconds
--out days hours ... etc.

dt.diff() <d1> <d2> => seconds.

if dt.diff() --gt, --lt --ge --le --eq ... <d1> <d2>

dt.since() <date> => now - date
	--rel returns:  a day... - a week, - an hour ... a year ... - a very long ...

--gt <nsecs>

but:- maybe--

secs:22
hours:44
days:33
